{% extends 'base.html.twig' %}

{% block title %}Vac!t - Homepage
{% endblock %}

{% block body %}
	<style>
	.content {
		display: flex;
		flex-direction: column;
		align-items: center;
		gap: 4rem;
		background-color: var(--orange);
	}

	@media only screen and (min-width: 1024px) { /* tailwindcss: max-lg */
        .content {
            flex-direction: row;
			gap: 5em;
			align-items: flex-start;
        }
    }

	.showcase {
		width: 324px;
		position: relative;
	}

	.showcase--image {
		clip-path: polygon(25% 0%, 75% 0%, 100% 50%, 75% 100%, 25% 100%, 0% 50%);
		background-color: var(--gray);
		background-repeat: no-repeat;
		background-size: cover;
		background-position: center;
		height: 270px;
		width: 324px;
		flex-shrink: 0;
	}

	.showcase--text {
		background-color: var(--gray);
		text-transform: uppercase;
		transform: rotate(350deg) translate(0,0);
		color: white;
		padding: 0.5rem;
		display: block;
		font-size: 1.5rem;
		margin-left: auto;
		width: max-content;
		transform-origin: right bottom;
		position: absolute;
		right: -30px;
		bottom: 40px;
		max-width: 360px;
	}

	.showcase--location {
		background-color: var(--gray);
		text-transform: uppercase;
		transform: rotate(350deg) translate(0,0);
		color: white;
		padding: 0.5rem;
		display: block;
		font-size: 0.8rem;
		margin-left: auto;
		width: max-content;
		transform-origin: right top;
		position: absolute;
		right: -30px;
		bottom: 0;
		max-width: 360px;
	}

	.list {
		display: flex;
		flex-direction: column;
		gap: 3rem;
	}

	.vacancy {
		display: flex;
		flex-direction: row;
		justify-content: space-between;
		gap: 1rem;
		align-items: center;
		text-decoration: none;
		color: black;
	}

	.vacancy:hover .vacancy--text--name {
		color: white;
	}

	.vacancy:hover .vacancy--arrow {
		filter: invert(100);
	}

	.vacancy--image {
		clip-path: polygon(25% 0%, 75% 0%, 100% 50%, 75% 100%, 25% 100%, 0% 50%);
		background-color: var(--gray);
		background-repeat: no-repeat;
		background-size: cover;
		background-position: center;
		height: 90px;
		width: 108px;
		flex-shrink: 0;
	}

	.vacancy--text {
		display: flex;
		flex-direction: column;
		justify-content: center;
		width: 100%;
	}

	.vacancy--arrow {
		flex-shrink: 0;
		height: 60px;
		filter: brightness(0) saturate(100%) invert(84%) sepia(1%) saturate(0%) hue-rotate(206deg) brightness(97%) contrast(77%);
	}
	
	.vacancy--text--name {
		display: block;
		font-size: 1.5rem;
		color: var(--light-gray);
	}

	.vacancy--text--summary {
		display: block;
		font-style: italic;
	}

	.vacancy--text--date-location {
		display: block;
	}
	</style>

	<div class="content">
			{% set firstVacancy = vacancies|first %}
			<a id="showcase" href="/vacancy/{{ firstVacancy.id }}" class="showcase">
				<div id="showcase--image" class="showcase--image" style="background-image: url('/images/vacancies/{{ firstVacancy.imageName }}')">
				</div>
				<span id="showcase--text" class="showcase--text">
					{{ firstVacancy.name }}
				</span> <br>
				<span id="showcase--location" class="showcase--location">
					{{ firstVacancy.employer.company.name }}, {{ firstVacancy.location }}
				</span>
			</a>
			<div class="list">
			{% for vacancy in vacancies %}
			<a href="/vacancy/{{ vacancy.id }}" class="vacancy">
				<div class="vacancy--image" style="background-image: url('/images/vacancies/{{ vacancy.imageName }}')"></div>
				<div class="vacancy--text">
					<small class="vacancy--text--date-location">{{ vacancy.location }}, {{ vacancy.date|date('d/m/Y') }}</small>
					<span class="vacancy--text--name">{{ vacancy.name }} voor {{ vacancy.employer.company.name }}</span>
					<span class="vacancy--text--summary">{{ vacancy.summary }}</span>
				</div>
				<img class="vacancy--arrow" height="120" width="120" src="/images/arrow.svg">
			</a>
			{% endfor %}
			</div>
	</div>

	<script>
		var vacancies = [];

		{% for vacancy in vacancies %}
		vacancies.push({
			"id": {{ vacancy.id }},
			"name": "{{ vacancy.name }}",
			"company": "{{ vacancy.employer.company.name }}",
			"location": "{{ vacancy.location }}",
			"imageName": "{{ vacancy.imageName }}"
		})
		{% endfor %}

		let vacancyIndex = 0;

		setInterval(() => {
			document.getElementById("showcase").setAttribute("href", "/vacancy/" + vacancies[vacancyIndex]["id"]);
			document.getElementById("showcase--text").innerHTML = vacancies[vacancyIndex]["name"];
			document.getElementById("showcase--location").innerHTML = vacancies[vacancyIndex]["company"] + ", " + vacancies[vacancyIndex]["location"];
			document.getElementById("showcase--image").style.backgroundImage = "url('/images/vacancies/" + vacancies[vacancyIndex]["imageName"] + "')";
			vacancyIndex++;
			if (vacancyIndex === vacancies.length) vacancyIndex = 0;
		}, 5000)
	</script>
{% endblock %}
